// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketData.proto

package ns.freetime.proto;

public final class MarketDataProto {
  private MarketDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MarketEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .marketdata.MarketEvent.EventType type = 1;
    /**
     * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
     */
    ns.freetime.proto.MarketDataProto.MarketEvent.EventType getType();

    // required string eventId = 2;
    /**
     * <code>required string eventId = 2;</code>
     */
    boolean hasEventId();
    /**
     * <code>required string eventId = 2;</code>
     */
    java.lang.String getEventId();
    /**
     * <code>required string eventId = 2;</code>
     */
    com.google.protobuf.ByteString
        getEventIdBytes();

    // required int64 timeStamp = 3;
    /**
     * <code>required int64 timeStamp = 3;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required int64 timeStamp = 3;</code>
     */
    long getTimeStamp();

    // optional .marketdata.MarketEvent.TradeType tradeType = 4;
    /**
     * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
     */
    boolean hasTradeType();
    /**
     * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
     */
    ns.freetime.proto.MarketDataProto.MarketEvent.TradeType getTradeType();

    // optional .marketdata.MarketEvent.Side side = 5;
    /**
     * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
     */
    boolean hasSide();
    /**
     * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
     */
    ns.freetime.proto.MarketDataProto.MarketEvent.Side getSide();

    // optional string symbol = 6;
    /**
     * <code>optional string symbol = 6;</code>
     */
    boolean hasSymbol();
    /**
     * <code>optional string symbol = 6;</code>
     */
    java.lang.String getSymbol();
    /**
     * <code>optional string symbol = 6;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    // optional double bid = 7;
    /**
     * <code>optional double bid = 7;</code>
     */
    boolean hasBid();
    /**
     * <code>optional double bid = 7;</code>
     */
    double getBid();

    // optional double ask = 8;
    /**
     * <code>optional double ask = 8;</code>
     */
    boolean hasAsk();
    /**
     * <code>optional double ask = 8;</code>
     */
    double getAsk();

    // optional double quantity = 9;
    /**
     * <code>optional double quantity = 9;</code>
     */
    boolean hasQuantity();
    /**
     * <code>optional double quantity = 9;</code>
     */
    double getQuantity();

    // optional string firm = 10;
    /**
     * <code>optional string firm = 10;</code>
     */
    boolean hasFirm();
    /**
     * <code>optional string firm = 10;</code>
     */
    java.lang.String getFirm();
    /**
     * <code>optional string firm = 10;</code>
     */
    com.google.protobuf.ByteString
        getFirmBytes();

    // optional string counterFirm = 11;
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    boolean hasCounterFirm();
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    java.lang.String getCounterFirm();
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    com.google.protobuf.ByteString
        getCounterFirmBytes();

    // optional .marketdata.MarketEvent.Status status = 12;
    /**
     * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
     */
    ns.freetime.proto.MarketDataProto.MarketEvent.Status getStatus();

    // optional double executedQty = 13;
    /**
     * <code>optional double executedQty = 13;</code>
     */
    boolean hasExecutedQty();
    /**
     * <code>optional double executedQty = 13;</code>
     */
    double getExecutedQty();
  }
  /**
   * Protobuf type {@code marketdata.MarketEvent}
   */
  public static final class MarketEvent extends
      com.google.protobuf.GeneratedMessage
      implements MarketEventOrBuilder {
    // Use MarketEvent.newBuilder() to construct.
    private MarketEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MarketEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MarketEvent defaultInstance;
    public static MarketEvent getDefaultInstance() {
      return defaultInstance;
    }

    public MarketEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MarketEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ns.freetime.proto.MarketDataProto.MarketEvent.EventType value = ns.freetime.proto.MarketDataProto.MarketEvent.EventType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              eventId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeStamp_ = input.readInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              ns.freetime.proto.MarketDataProto.MarketEvent.TradeType value = ns.freetime.proto.MarketDataProto.MarketEvent.TradeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                tradeType_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              ns.freetime.proto.MarketDataProto.MarketEvent.Side value = ns.freetime.proto.MarketDataProto.MarketEvent.Side.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                side_ = value;
              }
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              symbol_ = input.readBytes();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              bid_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              ask_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              quantity_ = input.readDouble();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              firm_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              counterFirm_ = input.readBytes();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              ns.freetime.proto.MarketDataProto.MarketEvent.Status value = ns.freetime.proto.MarketDataProto.MarketEvent.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                status_ = value;
              }
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              executedQty_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ns.freetime.proto.MarketDataProto.internal_static_marketdata_MarketEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ns.freetime.proto.MarketDataProto.internal_static_marketdata_MarketEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ns.freetime.proto.MarketDataProto.MarketEvent.class, ns.freetime.proto.MarketDataProto.MarketEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<MarketEvent> PARSER =
        new com.google.protobuf.AbstractParser<MarketEvent>() {
      public MarketEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarketEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MarketEvent> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code marketdata.MarketEvent.EventType}
     */
    public enum EventType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Trade = 0;</code>
       */
      Trade(0, 0),
      /**
       * <code>Quote = 1;</code>
       */
      Quote(1, 1),
      ;

      /**
       * <code>Trade = 0;</code>
       */
      public static final int Trade_VALUE = 0;
      /**
       * <code>Quote = 1;</code>
       */
      public static final int Quote_VALUE = 1;


      public final int getNumber() { return value; }

      public static EventType valueOf(int value) {
        switch (value) {
          case 0: return Trade;
          case 1: return Quote;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
              public EventType findValueByNumber(int number) {
                return EventType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ns.freetime.proto.MarketDataProto.MarketEvent.getDescriptor().getEnumTypes().get(0);
      }

      private static final EventType[] VALUES = values();

      public static EventType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EventType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:marketdata.MarketEvent.EventType)
    }

    /**
     * Protobuf enum {@code marketdata.MarketEvent.TradeType}
     */
    public enum TradeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Cash = 0;</code>
       */
      Cash(0, 0),
      /**
       * <code>Market = 1;</code>
       */
      Market(1, 1),
      /**
       * <code>Limit = 2;</code>
       */
      Limit(2, 2),
      /**
       * <code>Stop_Limit = 3;</code>
       */
      Stop_Limit(3, 3),
      /**
       * <code>MultiLeg = 4;</code>
       *
       * <pre>
       *if multileg, there will be child legs represented by child market events
       * </pre>
       */
      MultiLeg(4, 4),
      ;

      /**
       * <code>Cash = 0;</code>
       */
      public static final int Cash_VALUE = 0;
      /**
       * <code>Market = 1;</code>
       */
      public static final int Market_VALUE = 1;
      /**
       * <code>Limit = 2;</code>
       */
      public static final int Limit_VALUE = 2;
      /**
       * <code>Stop_Limit = 3;</code>
       */
      public static final int Stop_Limit_VALUE = 3;
      /**
       * <code>MultiLeg = 4;</code>
       *
       * <pre>
       *if multileg, there will be child legs represented by child market events
       * </pre>
       */
      public static final int MultiLeg_VALUE = 4;


      public final int getNumber() { return value; }

      public static TradeType valueOf(int value) {
        switch (value) {
          case 0: return Cash;
          case 1: return Market;
          case 2: return Limit;
          case 3: return Stop_Limit;
          case 4: return MultiLeg;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TradeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TradeType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TradeType>() {
              public TradeType findValueByNumber(int number) {
                return TradeType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ns.freetime.proto.MarketDataProto.MarketEvent.getDescriptor().getEnumTypes().get(1);
      }

      private static final TradeType[] VALUES = values();

      public static TradeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TradeType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:marketdata.MarketEvent.TradeType)
    }

    /**
     * Protobuf enum {@code marketdata.MarketEvent.Side}
     */
    public enum Side
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Buy = 0;</code>
       */
      Buy(0, 0),
      /**
       * <code>Sell = 1;</code>
       */
      Sell(1, 1),
      ;

      /**
       * <code>Buy = 0;</code>
       */
      public static final int Buy_VALUE = 0;
      /**
       * <code>Sell = 1;</code>
       */
      public static final int Sell_VALUE = 1;


      public final int getNumber() { return value; }

      public static Side valueOf(int value) {
        switch (value) {
          case 0: return Buy;
          case 1: return Sell;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Side>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Side>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Side>() {
              public Side findValueByNumber(int number) {
                return Side.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ns.freetime.proto.MarketDataProto.MarketEvent.getDescriptor().getEnumTypes().get(2);
      }

      private static final Side[] VALUES = values();

      public static Side valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Side(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:marketdata.MarketEvent.Side)
    }

    /**
     * Protobuf enum {@code marketdata.MarketEvent.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Done = 0;</code>
       */
      Done(0, 0),
      /**
       * <code>Active = 1;</code>
       */
      Active(1, 1),
      /**
       * <code>Cancelled = 2;</code>
       */
      Cancelled(2, 2),
      /**
       * <code>Expired = 3;</code>
       */
      Expired(3, 3),
      ;

      /**
       * <code>Done = 0;</code>
       */
      public static final int Done_VALUE = 0;
      /**
       * <code>Active = 1;</code>
       */
      public static final int Active_VALUE = 1;
      /**
       * <code>Cancelled = 2;</code>
       */
      public static final int Cancelled_VALUE = 2;
      /**
       * <code>Expired = 3;</code>
       */
      public static final int Expired_VALUE = 3;


      public final int getNumber() { return value; }

      public static Status valueOf(int value) {
        switch (value) {
          case 0: return Done;
          case 1: return Active;
          case 2: return Cancelled;
          case 3: return Expired;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ns.freetime.proto.MarketDataProto.MarketEvent.getDescriptor().getEnumTypes().get(3);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Status(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:marketdata.MarketEvent.Status)
    }

    private int bitField0_;
    // required .marketdata.MarketEvent.EventType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private ns.freetime.proto.MarketDataProto.MarketEvent.EventType type_;
    /**
     * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
     */
    public ns.freetime.proto.MarketDataProto.MarketEvent.EventType getType() {
      return type_;
    }

    // required string eventId = 2;
    public static final int EVENTID_FIELD_NUMBER = 2;
    private java.lang.Object eventId_;
    /**
     * <code>required string eventId = 2;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string eventId = 2;</code>
     */
    public java.lang.String getEventId() {
      java.lang.Object ref = eventId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string eventId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEventIdBytes() {
      java.lang.Object ref = eventId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 timeStamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timeStamp_;
    /**
     * <code>required int64 timeStamp = 3;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 timeStamp = 3;</code>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }

    // optional .marketdata.MarketEvent.TradeType tradeType = 4;
    public static final int TRADETYPE_FIELD_NUMBER = 4;
    private ns.freetime.proto.MarketDataProto.MarketEvent.TradeType tradeType_;
    /**
     * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
     */
    public boolean hasTradeType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
     */
    public ns.freetime.proto.MarketDataProto.MarketEvent.TradeType getTradeType() {
      return tradeType_;
    }

    // optional .marketdata.MarketEvent.Side side = 5;
    public static final int SIDE_FIELD_NUMBER = 5;
    private ns.freetime.proto.MarketDataProto.MarketEvent.Side side_;
    /**
     * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
     */
    public boolean hasSide() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
     */
    public ns.freetime.proto.MarketDataProto.MarketEvent.Side getSide() {
      return side_;
    }

    // optional string symbol = 6;
    public static final int SYMBOL_FIELD_NUMBER = 6;
    private java.lang.Object symbol_;
    /**
     * <code>optional string symbol = 6;</code>
     */
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string symbol = 6;</code>
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          symbol_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string symbol = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional double bid = 7;
    public static final int BID_FIELD_NUMBER = 7;
    private double bid_;
    /**
     * <code>optional double bid = 7;</code>
     */
    public boolean hasBid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double bid = 7;</code>
     */
    public double getBid() {
      return bid_;
    }

    // optional double ask = 8;
    public static final int ASK_FIELD_NUMBER = 8;
    private double ask_;
    /**
     * <code>optional double ask = 8;</code>
     */
    public boolean hasAsk() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double ask = 8;</code>
     */
    public double getAsk() {
      return ask_;
    }

    // optional double quantity = 9;
    public static final int QUANTITY_FIELD_NUMBER = 9;
    private double quantity_;
    /**
     * <code>optional double quantity = 9;</code>
     */
    public boolean hasQuantity() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional double quantity = 9;</code>
     */
    public double getQuantity() {
      return quantity_;
    }

    // optional string firm = 10;
    public static final int FIRM_FIELD_NUMBER = 10;
    private java.lang.Object firm_;
    /**
     * <code>optional string firm = 10;</code>
     */
    public boolean hasFirm() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string firm = 10;</code>
     */
    public java.lang.String getFirm() {
      java.lang.Object ref = firm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          firm_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string firm = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFirmBytes() {
      java.lang.Object ref = firm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string counterFirm = 11;
    public static final int COUNTERFIRM_FIELD_NUMBER = 11;
    private java.lang.Object counterFirm_;
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    public boolean hasCounterFirm() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    public java.lang.String getCounterFirm() {
      java.lang.Object ref = counterFirm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          counterFirm_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string counterFirm = 11;</code>
     */
    public com.google.protobuf.ByteString
        getCounterFirmBytes() {
      java.lang.Object ref = counterFirm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        counterFirm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .marketdata.MarketEvent.Status status = 12;
    public static final int STATUS_FIELD_NUMBER = 12;
    private ns.freetime.proto.MarketDataProto.MarketEvent.Status status_;
    /**
     * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
     */
    public ns.freetime.proto.MarketDataProto.MarketEvent.Status getStatus() {
      return status_;
    }

    // optional double executedQty = 13;
    public static final int EXECUTEDQTY_FIELD_NUMBER = 13;
    private double executedQty_;
    /**
     * <code>optional double executedQty = 13;</code>
     */
    public boolean hasExecutedQty() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional double executedQty = 13;</code>
     */
    public double getExecutedQty() {
      return executedQty_;
    }

    private void initFields() {
      type_ = ns.freetime.proto.MarketDataProto.MarketEvent.EventType.Trade;
      eventId_ = "";
      timeStamp_ = 0L;
      tradeType_ = ns.freetime.proto.MarketDataProto.MarketEvent.TradeType.Cash;
      side_ = ns.freetime.proto.MarketDataProto.MarketEvent.Side.Buy;
      symbol_ = "";
      bid_ = 0D;
      ask_ = 0D;
      quantity_ = 0D;
      firm_ = "";
      counterFirm_ = "";
      status_ = ns.freetime.proto.MarketDataProto.MarketEvent.Status.Done;
      executedQty_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEventId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEventIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, tradeType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, side_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, bid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, ask_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, quantity_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getFirmBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCounterFirmBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(12, status_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, executedQty_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEventIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, tradeType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, side_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, bid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, ask_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, quantity_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getFirmBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCounterFirmBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, status_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, executedQty_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ns.freetime.proto.MarketDataProto.MarketEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ns.freetime.proto.MarketDataProto.MarketEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code marketdata.MarketEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ns.freetime.proto.MarketDataProto.MarketEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ns.freetime.proto.MarketDataProto.internal_static_marketdata_MarketEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ns.freetime.proto.MarketDataProto.internal_static_marketdata_MarketEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ns.freetime.proto.MarketDataProto.MarketEvent.class, ns.freetime.proto.MarketDataProto.MarketEvent.Builder.class);
      }

      // Construct using ns.freetime.proto.MarketDataProto.MarketEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = ns.freetime.proto.MarketDataProto.MarketEvent.EventType.Trade;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        tradeType_ = ns.freetime.proto.MarketDataProto.MarketEvent.TradeType.Cash;
        bitField0_ = (bitField0_ & ~0x00000008);
        side_ = ns.freetime.proto.MarketDataProto.MarketEvent.Side.Buy;
        bitField0_ = (bitField0_ & ~0x00000010);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        bid_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        ask_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        quantity_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        firm_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        counterFirm_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        status_ = ns.freetime.proto.MarketDataProto.MarketEvent.Status.Done;
        bitField0_ = (bitField0_ & ~0x00000800);
        executedQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ns.freetime.proto.MarketDataProto.internal_static_marketdata_MarketEvent_descriptor;
      }

      public ns.freetime.proto.MarketDataProto.MarketEvent getDefaultInstanceForType() {
        return ns.freetime.proto.MarketDataProto.MarketEvent.getDefaultInstance();
      }

      public ns.freetime.proto.MarketDataProto.MarketEvent build() {
        ns.freetime.proto.MarketDataProto.MarketEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ns.freetime.proto.MarketDataProto.MarketEvent buildPartial() {
        ns.freetime.proto.MarketDataProto.MarketEvent result = new ns.freetime.proto.MarketDataProto.MarketEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tradeType_ = tradeType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bid_ = bid_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ask_ = ask_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.quantity_ = quantity_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.firm_ = firm_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.counterFirm_ = counterFirm_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.executedQty_ = executedQty_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ns.freetime.proto.MarketDataProto.MarketEvent) {
          return mergeFrom((ns.freetime.proto.MarketDataProto.MarketEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ns.freetime.proto.MarketDataProto.MarketEvent other) {
        if (other == ns.freetime.proto.MarketDataProto.MarketEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasEventId()) {
          bitField0_ |= 0x00000002;
          eventId_ = other.eventId_;
          onChanged();
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasTradeType()) {
          setTradeType(other.getTradeType());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasSymbol()) {
          bitField0_ |= 0x00000020;
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasBid()) {
          setBid(other.getBid());
        }
        if (other.hasAsk()) {
          setAsk(other.getAsk());
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        if (other.hasFirm()) {
          bitField0_ |= 0x00000200;
          firm_ = other.firm_;
          onChanged();
        }
        if (other.hasCounterFirm()) {
          bitField0_ |= 0x00000400;
          counterFirm_ = other.counterFirm_;
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasExecutedQty()) {
          setExecutedQty(other.getExecutedQty());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasEventId()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ns.freetime.proto.MarketDataProto.MarketEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ns.freetime.proto.MarketDataProto.MarketEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .marketdata.MarketEvent.EventType type = 1;
      private ns.freetime.proto.MarketDataProto.MarketEvent.EventType type_ = ns.freetime.proto.MarketDataProto.MarketEvent.EventType.Trade;
      /**
       * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
       */
      public ns.freetime.proto.MarketDataProto.MarketEvent.EventType getType() {
        return type_;
      }
      /**
       * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
       */
      public Builder setType(ns.freetime.proto.MarketDataProto.MarketEvent.EventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .marketdata.MarketEvent.EventType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = ns.freetime.proto.MarketDataProto.MarketEvent.EventType.Trade;
        onChanged();
        return this;
      }

      // required string eventId = 2;
      private java.lang.Object eventId_ = "";
      /**
       * <code>required string eventId = 2;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string eventId = 2;</code>
       */
      public java.lang.String getEventId() {
        java.lang.Object ref = eventId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          eventId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string eventId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEventIdBytes() {
        java.lang.Object ref = eventId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string eventId = 2;</code>
       */
      public Builder setEventId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string eventId = 2;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = getDefaultInstance().getEventId();
        onChanged();
        return this;
      }
      /**
       * <code>required string eventId = 2;</code>
       */
      public Builder setEventIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventId_ = value;
        onChanged();
        return this;
      }

      // required int64 timeStamp = 3;
      private long timeStamp_ ;
      /**
       * <code>required int64 timeStamp = 3;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 timeStamp = 3;</code>
       */
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>required int64 timeStamp = 3;</code>
       */
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000004;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timeStamp = 3;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      // optional .marketdata.MarketEvent.TradeType tradeType = 4;
      private ns.freetime.proto.MarketDataProto.MarketEvent.TradeType tradeType_ = ns.freetime.proto.MarketDataProto.MarketEvent.TradeType.Cash;
      /**
       * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
       */
      public boolean hasTradeType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
       */
      public ns.freetime.proto.MarketDataProto.MarketEvent.TradeType getTradeType() {
        return tradeType_;
      }
      /**
       * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
       */
      public Builder setTradeType(ns.freetime.proto.MarketDataProto.MarketEvent.TradeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        tradeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .marketdata.MarketEvent.TradeType tradeType = 4;</code>
       */
      public Builder clearTradeType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tradeType_ = ns.freetime.proto.MarketDataProto.MarketEvent.TradeType.Cash;
        onChanged();
        return this;
      }

      // optional .marketdata.MarketEvent.Side side = 5;
      private ns.freetime.proto.MarketDataProto.MarketEvent.Side side_ = ns.freetime.proto.MarketDataProto.MarketEvent.Side.Buy;
      /**
       * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
       */
      public boolean hasSide() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
       */
      public ns.freetime.proto.MarketDataProto.MarketEvent.Side getSide() {
        return side_;
      }
      /**
       * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
       */
      public Builder setSide(ns.freetime.proto.MarketDataProto.MarketEvent.Side value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        side_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .marketdata.MarketEvent.Side side = 5;</code>
       */
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000010);
        side_ = ns.freetime.proto.MarketDataProto.MarketEvent.Side.Buy;
        onChanged();
        return this;
      }

      // optional string symbol = 6;
      private java.lang.Object symbol_ = "";
      /**
       * <code>optional string symbol = 6;</code>
       */
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string symbol = 6;</code>
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string symbol = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string symbol = 6;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string symbol = 6;</code>
       */
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000020);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>optional string symbol = 6;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
        return this;
      }

      // optional double bid = 7;
      private double bid_ ;
      /**
       * <code>optional double bid = 7;</code>
       */
      public boolean hasBid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double bid = 7;</code>
       */
      public double getBid() {
        return bid_;
      }
      /**
       * <code>optional double bid = 7;</code>
       */
      public Builder setBid(double value) {
        bitField0_ |= 0x00000040;
        bid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bid = 7;</code>
       */
      public Builder clearBid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bid_ = 0D;
        onChanged();
        return this;
      }

      // optional double ask = 8;
      private double ask_ ;
      /**
       * <code>optional double ask = 8;</code>
       */
      public boolean hasAsk() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double ask = 8;</code>
       */
      public double getAsk() {
        return ask_;
      }
      /**
       * <code>optional double ask = 8;</code>
       */
      public Builder setAsk(double value) {
        bitField0_ |= 0x00000080;
        ask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ask = 8;</code>
       */
      public Builder clearAsk() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ask_ = 0D;
        onChanged();
        return this;
      }

      // optional double quantity = 9;
      private double quantity_ ;
      /**
       * <code>optional double quantity = 9;</code>
       */
      public boolean hasQuantity() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional double quantity = 9;</code>
       */
      public double getQuantity() {
        return quantity_;
      }
      /**
       * <code>optional double quantity = 9;</code>
       */
      public Builder setQuantity(double value) {
        bitField0_ |= 0x00000100;
        quantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double quantity = 9;</code>
       */
      public Builder clearQuantity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        quantity_ = 0D;
        onChanged();
        return this;
      }

      // optional string firm = 10;
      private java.lang.Object firm_ = "";
      /**
       * <code>optional string firm = 10;</code>
       */
      public boolean hasFirm() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string firm = 10;</code>
       */
      public java.lang.String getFirm() {
        java.lang.Object ref = firm_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          firm_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string firm = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFirmBytes() {
        java.lang.Object ref = firm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string firm = 10;</code>
       */
      public Builder setFirm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        firm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string firm = 10;</code>
       */
      public Builder clearFirm() {
        bitField0_ = (bitField0_ & ~0x00000200);
        firm_ = getDefaultInstance().getFirm();
        onChanged();
        return this;
      }
      /**
       * <code>optional string firm = 10;</code>
       */
      public Builder setFirmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        firm_ = value;
        onChanged();
        return this;
      }

      // optional string counterFirm = 11;
      private java.lang.Object counterFirm_ = "";
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public boolean hasCounterFirm() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public java.lang.String getCounterFirm() {
        java.lang.Object ref = counterFirm_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          counterFirm_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public com.google.protobuf.ByteString
          getCounterFirmBytes() {
        java.lang.Object ref = counterFirm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          counterFirm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public Builder setCounterFirm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        counterFirm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public Builder clearCounterFirm() {
        bitField0_ = (bitField0_ & ~0x00000400);
        counterFirm_ = getDefaultInstance().getCounterFirm();
        onChanged();
        return this;
      }
      /**
       * <code>optional string counterFirm = 11;</code>
       */
      public Builder setCounterFirmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        counterFirm_ = value;
        onChanged();
        return this;
      }

      // optional .marketdata.MarketEvent.Status status = 12;
      private ns.freetime.proto.MarketDataProto.MarketEvent.Status status_ = ns.freetime.proto.MarketDataProto.MarketEvent.Status.Done;
      /**
       * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
       */
      public ns.freetime.proto.MarketDataProto.MarketEvent.Status getStatus() {
        return status_;
      }
      /**
       * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
       */
      public Builder setStatus(ns.freetime.proto.MarketDataProto.MarketEvent.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .marketdata.MarketEvent.Status status = 12;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000800);
        status_ = ns.freetime.proto.MarketDataProto.MarketEvent.Status.Done;
        onChanged();
        return this;
      }

      // optional double executedQty = 13;
      private double executedQty_ ;
      /**
       * <code>optional double executedQty = 13;</code>
       */
      public boolean hasExecutedQty() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional double executedQty = 13;</code>
       */
      public double getExecutedQty() {
        return executedQty_;
      }
      /**
       * <code>optional double executedQty = 13;</code>
       */
      public Builder setExecutedQty(double value) {
        bitField0_ |= 0x00001000;
        executedQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double executedQty = 13;</code>
       */
      public Builder clearExecutedQty() {
        bitField0_ = (bitField0_ & ~0x00001000);
        executedQty_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:marketdata.MarketEvent)
    }

    static {
      defaultInstance = new MarketEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:marketdata.MarketEvent)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_marketdata_MarketEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_marketdata_MarketEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020MarketData.proto\022\nmarketdata\"\256\004\n\013Marke" +
      "tEvent\022/\n\004type\030\001 \002(\0162!.marketdata.Market" +
      "Event.EventType\022\017\n\007eventId\030\002 \002(\t\022\021\n\ttime" +
      "Stamp\030\003 \002(\003\0224\n\ttradeType\030\004 \001(\0162!.marketd" +
      "ata.MarketEvent.TradeType\022*\n\004side\030\005 \001(\0162" +
      "\034.marketdata.MarketEvent.Side\022\016\n\006symbol\030" +
      "\006 \001(\t\022\013\n\003bid\030\007 \001(\001\022\013\n\003ask\030\010 \001(\001\022\020\n\010quant" +
      "ity\030\t \001(\001\022\014\n\004firm\030\n \001(\t\022\023\n\013counterFirm\030\013" +
      " \001(\t\022.\n\006status\030\014 \001(\0162\036.marketdata.Market" +
      "Event.Status\022\023\n\013executedQty\030\r \001(\001\"!\n\tEve",
      "ntType\022\t\n\005Trade\020\000\022\t\n\005Quote\020\001\"J\n\tTradeTyp" +
      "e\022\010\n\004Cash\020\000\022\n\n\006Market\020\001\022\t\n\005Limit\020\002\022\016\n\nSt" +
      "op_Limit\020\003\022\014\n\010MultiLeg\020\004\"\031\n\004Side\022\007\n\003Buy\020" +
      "\000\022\010\n\004Sell\020\001\":\n\006Status\022\010\n\004Done\020\000\022\n\n\006Activ" +
      "e\020\001\022\r\n\tCancelled\020\002\022\013\n\007Expired\020\003B$\n\021ns.fr" +
      "eetime.protoB\017MarketDataProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_marketdata_MarketEvent_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_marketdata_MarketEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_marketdata_MarketEvent_descriptor,
              new java.lang.String[] { "Type", "EventId", "TimeStamp", "TradeType", "Side", "Symbol", "Bid", "Ask", "Quantity", "Firm", "CounterFirm", "Status", "ExecutedQty", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
